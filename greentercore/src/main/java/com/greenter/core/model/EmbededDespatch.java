/**
 * Grenter App
 * Aplicacion para mypes empleando sus comprobantes electr√≥nicos
 *
 * OpenAPI spec version: 1.0.0
 * Contact: giansalex@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.greenter.core.model;

import com.google.gson.annotations.SerializedName;

public class EmbededDespatch {
  
  @SerializedName("llegada")
  private Direction llegada = null;
  @SerializedName("partida")
  private Direction partida = null;
  @SerializedName("transportista")
  private Client transportista = null;
  @SerializedName("nroLicencia")
  private String nroLicencia = null;
  @SerializedName("transpPlaca")
  private String transpPlaca = null;
  @SerializedName("transpCodeAuth")
  private String transpCodeAuth = null;
  @SerializedName("transpMarca")
  private String transpMarca = null;
  @SerializedName("modTraslado")
  private String modTraslado = null;
  @SerializedName("pesoBruto")
  private Float pesoBruto = null;
  @SerializedName("undPesoBruto")
  private String undPesoBruto = null;

  /**
   **/
  
  public Direction getLlegada() {
    return llegada;
  }
  public void setLlegada(Direction llegada) {
    this.llegada = llegada;
  }

  /**
   **/
  
  public Direction getPartida() {
    return partida;
  }
  public void setPartida(Direction partida) {
    this.partida = partida;
  }

  /**
   **/
  
  public Client getTransportista() {
    return transportista;
  }
  public void setTransportista(Client transportista) {
    this.transportista = transportista;
  }

  /**
   **/
  
  public String getNroLicencia() {
    return nroLicencia;
  }
  public void setNroLicencia(String nroLicencia) {
    this.nroLicencia = nroLicencia;
  }

  /**
   **/
  
  public String getTranspPlaca() {
    return transpPlaca;
  }
  public void setTranspPlaca(String transpPlaca) {
    this.transpPlaca = transpPlaca;
  }

  /**
   **/
  
  public String getTranspCodeAuth() {
    return transpCodeAuth;
  }
  public void setTranspCodeAuth(String transpCodeAuth) {
    this.transpCodeAuth = transpCodeAuth;
  }

  /**
   **/
  
  public String getTranspMarca() {
    return transpMarca;
  }
  public void setTranspMarca(String transpMarca) {
    this.transpMarca = transpMarca;
  }

  /**
   **/
  
  public String getModTraslado() {
    return modTraslado;
  }
  public void setModTraslado(String modTraslado) {
    this.modTraslado = modTraslado;
  }

  /**
   **/
  
  public Float getPesoBruto() {
    return pesoBruto;
  }
  public void setPesoBruto(Float pesoBruto) {
    this.pesoBruto = pesoBruto;
  }

  /**
   **/
  
  public String getUndPesoBruto() {
    return undPesoBruto;
  }
  public void setUndPesoBruto(String undPesoBruto) {
    this.undPesoBruto = undPesoBruto;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmbededDespatch embededDespatch = (EmbededDespatch) o;
    return (this.llegada == null ? embededDespatch.llegada == null : this.llegada.equals(embededDespatch.llegada)) &&
        (this.partida == null ? embededDespatch.partida == null : this.partida.equals(embededDespatch.partida)) &&
        (this.transportista == null ? embededDespatch.transportista == null : this.transportista.equals(embededDespatch.transportista)) &&
        (this.nroLicencia == null ? embededDespatch.nroLicencia == null : this.nroLicencia.equals(embededDespatch.nroLicencia)) &&
        (this.transpPlaca == null ? embededDespatch.transpPlaca == null : this.transpPlaca.equals(embededDespatch.transpPlaca)) &&
        (this.transpCodeAuth == null ? embededDespatch.transpCodeAuth == null : this.transpCodeAuth.equals(embededDespatch.transpCodeAuth)) &&
        (this.transpMarca == null ? embededDespatch.transpMarca == null : this.transpMarca.equals(embededDespatch.transpMarca)) &&
        (this.modTraslado == null ? embededDespatch.modTraslado == null : this.modTraslado.equals(embededDespatch.modTraslado)) &&
        (this.pesoBruto == null ? embededDespatch.pesoBruto == null : this.pesoBruto.equals(embededDespatch.pesoBruto)) &&
        (this.undPesoBruto == null ? embededDespatch.undPesoBruto == null : this.undPesoBruto.equals(embededDespatch.undPesoBruto));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.llegada == null ? 0: this.llegada.hashCode());
    result = 31 * result + (this.partida == null ? 0: this.partida.hashCode());
    result = 31 * result + (this.transportista == null ? 0: this.transportista.hashCode());
    result = 31 * result + (this.nroLicencia == null ? 0: this.nroLicencia.hashCode());
    result = 31 * result + (this.transpPlaca == null ? 0: this.transpPlaca.hashCode());
    result = 31 * result + (this.transpCodeAuth == null ? 0: this.transpCodeAuth.hashCode());
    result = 31 * result + (this.transpMarca == null ? 0: this.transpMarca.hashCode());
    result = 31 * result + (this.modTraslado == null ? 0: this.modTraslado.hashCode());
    result = 31 * result + (this.pesoBruto == null ? 0: this.pesoBruto.hashCode());
    result = 31 * result + (this.undPesoBruto == null ? 0: this.undPesoBruto.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmbededDespatch {\n");
    
    sb.append("  llegada: ").append(llegada).append("\n");
    sb.append("  partida: ").append(partida).append("\n");
    sb.append("  transportista: ").append(transportista).append("\n");
    sb.append("  nroLicencia: ").append(nroLicencia).append("\n");
    sb.append("  transpPlaca: ").append(transpPlaca).append("\n");
    sb.append("  transpCodeAuth: ").append(transpCodeAuth).append("\n");
    sb.append("  transpMarca: ").append(transpMarca).append("\n");
    sb.append("  modTraslado: ").append(modTraslado).append("\n");
    sb.append("  pesoBruto: ").append(pesoBruto).append("\n");
    sb.append("  undPesoBruto: ").append(undPesoBruto).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
