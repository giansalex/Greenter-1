/**
 * Grenter App
 * Aplicacion para mypes empleando sus comprobantes electr√≥nicos
 *
 * OpenAPI spec version: 1.0.0
 * Contact: giansalex@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.greenter_core.model;

import com.google.gson.annotations.SerializedName;

public class Detraction {
  
  @SerializedName("percent")
  private Float percent = null;
  @SerializedName("mount")
  private Float mount = null;
  @SerializedName("valueRef")
  private Float valueRef = null;

  /**
   **/
  
  public Float getPercent() {
    return percent;
  }
  public void setPercent(Float percent) {
    this.percent = percent;
  }

  /**
   **/
  
  public Float getMount() {
    return mount;
  }
  public void setMount(Float mount) {
    this.mount = mount;
  }

  /**
   **/
  
  public Float getValueRef() {
    return valueRef;
  }
  public void setValueRef(Float valueRef) {
    this.valueRef = valueRef;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Detraction detraction = (Detraction) o;
    return (this.percent == null ? detraction.percent == null : this.percent.equals(detraction.percent)) &&
        (this.mount == null ? detraction.mount == null : this.mount.equals(detraction.mount)) &&
        (this.valueRef == null ? detraction.valueRef == null : this.valueRef.equals(detraction.valueRef));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.percent == null ? 0: this.percent.hashCode());
    result = 31 * result + (this.mount == null ? 0: this.mount.hashCode());
    result = 31 * result + (this.valueRef == null ? 0: this.valueRef.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Detraction {\n");
    
    sb.append("  percent: ").append(percent).append("\n");
    sb.append("  mount: ").append(mount).append("\n");
    sb.append("  valueRef: ").append(valueRef).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
